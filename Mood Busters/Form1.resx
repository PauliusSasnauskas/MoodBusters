<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>